#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RESHOTEL_APP
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="RESHOTEL_DB")]
	public partial class RESHOTEL_DCDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertbookingOption(bookingOption instance);
    partial void UpdatebookingOption(bookingOption instance);
    partial void DeletebookingOption(bookingOption instance);
    partial void InsertstaffProfile(staffProfile instance);
    partial void UpdatestaffProfile(staffProfile instance);
    partial void DeletestaffProfile(staffProfile instance);
    partial void Insertcustomer(customer instance);
    partial void Updatecustomer(customer instance);
    partial void Deletecustomer(customer instance);
    partial void Insertinvoice(invoice instance);
    partial void Updateinvoice(invoice instance);
    partial void Deleteinvoice(invoice instance);
    partial void Insertmeal(meal instance);
    partial void Updatemeal(meal instance);
    partial void Deletemeal(meal instance);
    partial void Insertoption(option instance);
    partial void Updateoption(option instance);
    partial void Deleteoption(option instance);
    partial void Insertprofile(profile instance);
    partial void Updateprofile(profile instance);
    partial void Deleteprofile(profile instance);
    partial void Insertstaff(staff instance);
    partial void Updatestaff(staff instance);
    partial void Deletestaff(staff instance);
    partial void Insertroom(room instance);
    partial void Updateroom(room instance);
    partial void Deleteroom(room instance);
    partial void Insertpayment(payment instance);
    partial void Updatepayment(payment instance);
    partial void Deletepayment(payment instance);
    partial void Insertbooking(booking instance);
    partial void Updatebooking(booking instance);
    partial void Deletebooking(booking instance);
    partial void Insertfeature(feature instance);
    partial void Updatefeature(feature instance);
    partial void Deletefeature(feature instance);
    partial void Insertpromotion(promotion instance);
    partial void Updatepromotion(promotion instance);
    partial void Deletepromotion(promotion instance);
    partial void Insertlog(log instance);
    partial void Updatelog(log instance);
    partial void Deletelog(log instance);
    #endregion
		
		public RESHOTEL_DCDataContext() : 
				base(global::RESHOTEL_APP.Properties.Settings.Default.RESHOTEL_DBConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public RESHOTEL_DCDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RESHOTEL_DCDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RESHOTEL_DCDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RESHOTEL_DCDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<bookingOption> bookingOptions
		{
			get
			{
				return this.GetTable<bookingOption>();
			}
		}
		
		public System.Data.Linq.Table<staffProfile> staffProfiles
		{
			get
			{
				return this.GetTable<staffProfile>();
			}
		}
		
		public System.Data.Linq.Table<customer> customers
		{
			get
			{
				return this.GetTable<customer>();
			}
		}
		
		public System.Data.Linq.Table<invoice> invoices
		{
			get
			{
				return this.GetTable<invoice>();
			}
		}
		
		public System.Data.Linq.Table<meal> meals
		{
			get
			{
				return this.GetTable<meal>();
			}
		}
		
		public System.Data.Linq.Table<option> options
		{
			get
			{
				return this.GetTable<option>();
			}
		}
		
		public System.Data.Linq.Table<profile> profiles
		{
			get
			{
				return this.GetTable<profile>();
			}
		}
		
		public System.Data.Linq.Table<staff> staffs
		{
			get
			{
				return this.GetTable<staff>();
			}
		}
		
		public System.Data.Linq.Table<room> rooms
		{
			get
			{
				return this.GetTable<room>();
			}
		}
		
		public System.Data.Linq.Table<payment> payments
		{
			get
			{
				return this.GetTable<payment>();
			}
		}
		
		public System.Data.Linq.Table<booking> bookings
		{
			get
			{
				return this.GetTable<booking>();
			}
		}
		
		public System.Data.Linq.Table<feature> features
		{
			get
			{
				return this.GetTable<feature>();
			}
		}
		
		public System.Data.Linq.Table<promotion> promotions
		{
			get
			{
				return this.GetTable<promotion>();
			}
		}
		
		public System.Data.Linq.Table<log> logs
		{
			get
			{
				return this.GetTable<log>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.bookingOption")]
	public partial class bookingOption : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _id_options;
		
		private int _id_booking;
		
		private EntityRef<option> _option;
		
		private EntityRef<booking> _booking;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onid_optionsChanging(int value);
    partial void Onid_optionsChanged();
    partial void Onid_bookingChanging(int value);
    partial void Onid_bookingChanged();
    #endregion
		
		public bookingOption()
		{
			this._option = default(EntityRef<option>);
			this._booking = default(EntityRef<booking>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_options", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_options
		{
			get
			{
				return this._id_options;
			}
			set
			{
				if ((this._id_options != value))
				{
					if (this._option.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_optionsChanging(value);
					this.SendPropertyChanging();
					this._id_options = value;
					this.SendPropertyChanged("id_options");
					this.Onid_optionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_booking", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_booking
		{
			get
			{
				return this._id_booking;
			}
			set
			{
				if ((this._id_booking != value))
				{
					if (this._booking.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_bookingChanging(value);
					this.SendPropertyChanging();
					this._id_booking = value;
					this.SendPropertyChanged("id_booking");
					this.Onid_bookingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="option_bookingOption", Storage="_option", ThisKey="id_options", OtherKey="id", IsForeignKey=true)]
		public option option
		{
			get
			{
				return this._option.Entity;
			}
			set
			{
				option previousValue = this._option.Entity;
				if (((previousValue != value) 
							|| (this._option.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._option.Entity = null;
						previousValue.bookingOptions.Remove(this);
					}
					this._option.Entity = value;
					if ((value != null))
					{
						value.bookingOptions.Add(this);
						this._id_options = value.id;
					}
					else
					{
						this._id_options = default(int);
					}
					this.SendPropertyChanged("option");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="booking_bookingOption", Storage="_booking", ThisKey="id_booking", OtherKey="id", IsForeignKey=true)]
		public booking booking
		{
			get
			{
				return this._booking.Entity;
			}
			set
			{
				booking previousValue = this._booking.Entity;
				if (((previousValue != value) 
							|| (this._booking.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._booking.Entity = null;
						previousValue.bookingOptions.Remove(this);
					}
					this._booking.Entity = value;
					if ((value != null))
					{
						value.bookingOptions.Add(this);
						this._id_booking = value.id;
					}
					else
					{
						this._id_booking = default(int);
					}
					this.SendPropertyChanged("booking");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.staffProfile")]
	public partial class staffProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _id_staff;
		
		private int _id_profile;
		
		private EntityRef<profile> _profile;
		
		private EntityRef<staff> _staff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onid_staffChanging(int value);
    partial void Onid_staffChanged();
    partial void Onid_profileChanging(int value);
    partial void Onid_profileChanged();
    #endregion
		
		public staffProfile()
		{
			this._profile = default(EntityRef<profile>);
			this._staff = default(EntityRef<staff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_staff", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_staff
		{
			get
			{
				return this._id_staff;
			}
			set
			{
				if ((this._id_staff != value))
				{
					if (this._staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_staffChanging(value);
					this.SendPropertyChanging();
					this._id_staff = value;
					this.SendPropertyChanged("id_staff");
					this.Onid_staffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_profile", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_profile
		{
			get
			{
				return this._id_profile;
			}
			set
			{
				if ((this._id_profile != value))
				{
					if (this._profile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_profileChanging(value);
					this.SendPropertyChanging();
					this._id_profile = value;
					this.SendPropertyChanged("id_profile");
					this.Onid_profileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="profile_staffProfile", Storage="_profile", ThisKey="id_profile", OtherKey="id", IsForeignKey=true)]
		public profile profile
		{
			get
			{
				return this._profile.Entity;
			}
			set
			{
				profile previousValue = this._profile.Entity;
				if (((previousValue != value) 
							|| (this._profile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._profile.Entity = null;
						previousValue.staffProfiles.Remove(this);
					}
					this._profile.Entity = value;
					if ((value != null))
					{
						value.staffProfiles.Add(this);
						this._id_profile = value.id;
					}
					else
					{
						this._id_profile = default(int);
					}
					this.SendPropertyChanged("profile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="staff_staffProfile", Storage="_staff", ThisKey="id_staff", OtherKey="id", IsForeignKey=true)]
		public staff staff
		{
			get
			{
				return this._staff.Entity;
			}
			set
			{
				staff previousValue = this._staff.Entity;
				if (((previousValue != value) 
							|| (this._staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._staff.Entity = null;
						previousValue.staffProfiles.Remove(this);
					}
					this._staff.Entity = value;
					if ((value != null))
					{
						value.staffProfiles.Add(this);
						this._id_staff = value.id;
					}
					else
					{
						this._id_staff = default(int);
					}
					this.SendPropertyChanged("staff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.customer")]
	public partial class customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _firstname;
		
		private string _lastname;
		
		private string _email;
		
		private string _phone;
		
		private System.Nullable<int> _nbReservation;
		
		private EntitySet<booking> _bookings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnfirstnameChanging(string value);
    partial void OnfirstnameChanged();
    partial void OnlastnameChanging(string value);
    partial void OnlastnameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnnbReservationChanging(System.Nullable<int> value);
    partial void OnnbReservationChanged();
    #endregion
		
		public customer()
		{
			this._bookings = new EntitySet<booking>(new Action<booking>(this.attach_bookings), new Action<booking>(this.detach_bookings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstname", DbType="VarChar(50)")]
		public string firstname
		{
			get
			{
				return this._firstname;
			}
			set
			{
				if ((this._firstname != value))
				{
					this.OnfirstnameChanging(value);
					this.SendPropertyChanging();
					this._firstname = value;
					this.SendPropertyChanged("firstname");
					this.OnfirstnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastname", DbType="VarChar(50)")]
		public string lastname
		{
			get
			{
				return this._lastname;
			}
			set
			{
				if ((this._lastname != value))
				{
					this.OnlastnameChanging(value);
					this.SendPropertyChanging();
					this._lastname = value;
					this.SendPropertyChanged("lastname");
					this.OnlastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(50)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nbReservation", DbType="Int")]
		public System.Nullable<int> nbReservation
		{
			get
			{
				return this._nbReservation;
			}
			set
			{
				if ((this._nbReservation != value))
				{
					this.OnnbReservationChanging(value);
					this.SendPropertyChanging();
					this._nbReservation = value;
					this.SendPropertyChanged("nbReservation");
					this.OnnbReservationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_booking", Storage="_bookings", ThisKey="id", OtherKey="id_customer")]
		public EntitySet<booking> bookings
		{
			get
			{
				return this._bookings;
			}
			set
			{
				this._bookings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_bookings(booking entity)
		{
			this.SendPropertyChanging();
			entity.customer = this;
		}
		
		private void detach_bookings(booking entity)
		{
			this.SendPropertyChanging();
			entity.customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.invoice")]
	public partial class invoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _reference;
		
		private System.Nullable<System.DateTime> _invoiceDate;
		
		private System.Nullable<decimal> _tva;
		
		private int _id_booking;
		
		private EntityRef<booking> _booking;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnreferenceChanging(string value);
    partial void OnreferenceChanged();
    partial void OninvoiceDateChanging(System.Nullable<System.DateTime> value);
    partial void OninvoiceDateChanged();
    partial void OntvaChanging(System.Nullable<decimal> value);
    partial void OntvaChanged();
    partial void Onid_bookingChanging(int value);
    partial void Onid_bookingChanged();
    #endregion
		
		public invoice()
		{
			this._booking = default(EntityRef<booking>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reference", DbType="VarChar(25)")]
		public string reference
		{
			get
			{
				return this._reference;
			}
			set
			{
				if ((this._reference != value))
				{
					this.OnreferenceChanging(value);
					this.SendPropertyChanging();
					this._reference = value;
					this.SendPropertyChanged("reference");
					this.OnreferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invoiceDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> invoiceDate
		{
			get
			{
				return this._invoiceDate;
			}
			set
			{
				if ((this._invoiceDate != value))
				{
					this.OninvoiceDateChanging(value);
					this.SendPropertyChanging();
					this._invoiceDate = value;
					this.SendPropertyChanged("invoiceDate");
					this.OninvoiceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tva", DbType="Decimal(25,2)")]
		public System.Nullable<decimal> tva
		{
			get
			{
				return this._tva;
			}
			set
			{
				if ((this._tva != value))
				{
					this.OntvaChanging(value);
					this.SendPropertyChanging();
					this._tva = value;
					this.SendPropertyChanged("tva");
					this.OntvaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_booking", DbType="Int NOT NULL")]
		public int id_booking
		{
			get
			{
				return this._id_booking;
			}
			set
			{
				if ((this._id_booking != value))
				{
					if (this._booking.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_bookingChanging(value);
					this.SendPropertyChanging();
					this._id_booking = value;
					this.SendPropertyChanged("id_booking");
					this.Onid_bookingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="booking_invoice", Storage="_booking", ThisKey="id_booking", OtherKey="id", IsForeignKey=true)]
		public booking booking
		{
			get
			{
				return this._booking.Entity;
			}
			set
			{
				booking previousValue = this._booking.Entity;
				if (((previousValue != value) 
							|| (this._booking.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._booking.Entity = null;
						previousValue.invoices.Remove(this);
					}
					this._booking.Entity = value;
					if ((value != null))
					{
						value.invoices.Add(this);
						this._id_booking = value.id;
					}
					else
					{
						this._id_booking = default(int);
					}
					this.SendPropertyChanged("booking");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.meal")]
	public partial class meal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<decimal> _breakfastRate;
		
		private System.Nullable<decimal> _dinnerRate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnbreakfastRateChanging(System.Nullable<decimal> value);
    partial void OnbreakfastRateChanged();
    partial void OndinnerRateChanging(System.Nullable<decimal> value);
    partial void OndinnerRateChanged();
    #endregion
		
		public meal()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_breakfastRate", DbType="Decimal(25,2)")]
		public System.Nullable<decimal> breakfastRate
		{
			get
			{
				return this._breakfastRate;
			}
			set
			{
				if ((this._breakfastRate != value))
				{
					this.OnbreakfastRateChanging(value);
					this.SendPropertyChanging();
					this._breakfastRate = value;
					this.SendPropertyChanged("breakfastRate");
					this.OnbreakfastRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dinnerRate", DbType="Decimal(25,2)")]
		public System.Nullable<decimal> dinnerRate
		{
			get
			{
				return this._dinnerRate;
			}
			set
			{
				if ((this._dinnerRate != value))
				{
					this.OndinnerRateChanging(value);
					this.SendPropertyChanging();
					this._dinnerRate = value;
					this.SendPropertyChanged("dinnerRate");
					this.OndinnerRateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.options")]
	public partial class option : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _label;
		
		private System.Nullable<decimal> _rate;
		
		private EntitySet<bookingOption> _bookingOptions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnlabelChanging(string value);
    partial void OnlabelChanged();
    partial void OnrateChanging(System.Nullable<decimal> value);
    partial void OnrateChanged();
    #endregion
		
		public option()
		{
			this._bookingOptions = new EntitySet<bookingOption>(new Action<bookingOption>(this.attach_bookingOptions), new Action<bookingOption>(this.detach_bookingOptions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_label", DbType="VarChar(25)")]
		public string label
		{
			get
			{
				return this._label;
			}
			set
			{
				if ((this._label != value))
				{
					this.OnlabelChanging(value);
					this.SendPropertyChanging();
					this._label = value;
					this.SendPropertyChanged("label");
					this.OnlabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rate", DbType="Decimal(25,2)")]
		public System.Nullable<decimal> rate
		{
			get
			{
				return this._rate;
			}
			set
			{
				if ((this._rate != value))
				{
					this.OnrateChanging(value);
					this.SendPropertyChanging();
					this._rate = value;
					this.SendPropertyChanged("rate");
					this.OnrateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="option_bookingOption", Storage="_bookingOptions", ThisKey="id", OtherKey="id_options")]
		public EntitySet<bookingOption> bookingOptions
		{
			get
			{
				return this._bookingOptions;
			}
			set
			{
				this._bookingOptions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_bookingOptions(bookingOption entity)
		{
			this.SendPropertyChanging();
			entity.option = this;
		}
		
		private void detach_bookingOptions(bookingOption entity)
		{
			this.SendPropertyChanging();
			entity.option = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.profile")]
	public partial class profile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _label;
		
		private EntitySet<staffProfile> _staffProfiles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnlabelChanging(string value);
    partial void OnlabelChanged();
    #endregion
		
		public profile()
		{
			this._staffProfiles = new EntitySet<staffProfile>(new Action<staffProfile>(this.attach_staffProfiles), new Action<staffProfile>(this.detach_staffProfiles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_label", DbType="VarChar(25)")]
		public string label
		{
			get
			{
				return this._label;
			}
			set
			{
				if ((this._label != value))
				{
					this.OnlabelChanging(value);
					this.SendPropertyChanging();
					this._label = value;
					this.SendPropertyChanged("label");
					this.OnlabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="profile_staffProfile", Storage="_staffProfiles", ThisKey="id", OtherKey="id_profile")]
		public EntitySet<staffProfile> staffProfiles
		{
			get
			{
				return this._staffProfiles;
			}
			set
			{
				this._staffProfiles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_staffProfiles(staffProfile entity)
		{
			this.SendPropertyChanging();
			entity.profile = this;
		}
		
		private void detach_staffProfiles(staffProfile entity)
		{
			this.SendPropertyChanging();
			entity.profile = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.staff")]
	public partial class staff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _firstname;
		
		private string _lastname;
		
		private string _username;
		
		private string _password;
		
		private EntitySet<staffProfile> _staffProfiles;
		
		private EntitySet<booking> _bookings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnfirstnameChanging(string value);
    partial void OnfirstnameChanged();
    partial void OnlastnameChanging(string value);
    partial void OnlastnameChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    #endregion
		
		public staff()
		{
			this._staffProfiles = new EntitySet<staffProfile>(new Action<staffProfile>(this.attach_staffProfiles), new Action<staffProfile>(this.detach_staffProfiles));
			this._bookings = new EntitySet<booking>(new Action<booking>(this.attach_bookings), new Action<booking>(this.detach_bookings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstname", DbType="VarChar(25)")]
		public string firstname
		{
			get
			{
				return this._firstname;
			}
			set
			{
				if ((this._firstname != value))
				{
					this.OnfirstnameChanging(value);
					this.SendPropertyChanging();
					this._firstname = value;
					this.SendPropertyChanged("firstname");
					this.OnfirstnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastname", DbType="VarChar(25)")]
		public string lastname
		{
			get
			{
				return this._lastname;
			}
			set
			{
				if ((this._lastname != value))
				{
					this.OnlastnameChanging(value);
					this.SendPropertyChanging();
					this._lastname = value;
					this.SendPropertyChanged("lastname");
					this.OnlastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(25)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(25)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="staff_staffProfile", Storage="_staffProfiles", ThisKey="id", OtherKey="id_staff")]
		public EntitySet<staffProfile> staffProfiles
		{
			get
			{
				return this._staffProfiles;
			}
			set
			{
				this._staffProfiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="staff_booking", Storage="_bookings", ThisKey="id", OtherKey="id_staff")]
		public EntitySet<booking> bookings
		{
			get
			{
				return this._bookings;
			}
			set
			{
				this._bookings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_staffProfiles(staffProfile entity)
		{
			this.SendPropertyChanging();
			entity.staff = this;
		}
		
		private void detach_staffProfiles(staffProfile entity)
		{
			this.SendPropertyChanging();
			entity.staff = null;
		}
		
		private void attach_bookings(booking entity)
		{
			this.SendPropertyChanging();
			entity.staff = this;
		}
		
		private void detach_bookings(booking entity)
		{
			this.SendPropertyChanging();
			entity.staff = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.room")]
	public partial class room : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _number;
		
		private System.Nullable<bool> _status;
		
		private System.Nullable<System.DateTime> _cleaned;
		
		private int _id_features;
		
		private EntitySet<booking> _bookings;
		
		private EntityRef<feature> _feature;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnumberChanging(System.Nullable<int> value);
    partial void OnnumberChanged();
    partial void OnstatusChanging(System.Nullable<bool> value);
    partial void OnstatusChanged();
    partial void OncleanedChanging(System.Nullable<System.DateTime> value);
    partial void OncleanedChanged();
    partial void Onid_featuresChanging(int value);
    partial void Onid_featuresChanged();
    #endregion
		
		public room()
		{
			this._bookings = new EntitySet<booking>(new Action<booking>(this.attach_bookings), new Action<booking>(this.detach_bookings));
			this._feature = default(EntityRef<feature>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_number", DbType="Int")]
		public System.Nullable<int> number
		{
			get
			{
				return this._number;
			}
			set
			{
				if ((this._number != value))
				{
					this.OnnumberChanging(value);
					this.SendPropertyChanging();
					this._number = value;
					this.SendPropertyChanged("number");
					this.OnnumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit")]
		public System.Nullable<bool> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cleaned", DbType="DateTime")]
		public System.Nullable<System.DateTime> cleaned
		{
			get
			{
				return this._cleaned;
			}
			set
			{
				if ((this._cleaned != value))
				{
					this.OncleanedChanging(value);
					this.SendPropertyChanging();
					this._cleaned = value;
					this.SendPropertyChanged("cleaned");
					this.OncleanedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_features", DbType="Int NOT NULL")]
		public int id_features
		{
			get
			{
				return this._id_features;
			}
			set
			{
				if ((this._id_features != value))
				{
					if (this._feature.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_featuresChanging(value);
					this.SendPropertyChanging();
					this._id_features = value;
					this.SendPropertyChanged("id_features");
					this.Onid_featuresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="room_booking", Storage="_bookings", ThisKey="id", OtherKey="id_room")]
		public EntitySet<booking> bookings
		{
			get
			{
				return this._bookings;
			}
			set
			{
				this._bookings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="feature_room", Storage="_feature", ThisKey="id_features", OtherKey="id", IsForeignKey=true)]
		public feature feature
		{
			get
			{
				return this._feature.Entity;
			}
			set
			{
				feature previousValue = this._feature.Entity;
				if (((previousValue != value) 
							|| (this._feature.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._feature.Entity = null;
						previousValue.rooms.Remove(this);
					}
					this._feature.Entity = value;
					if ((value != null))
					{
						value.rooms.Add(this);
						this._id_features = value.id;
					}
					else
					{
						this._id_features = default(int);
					}
					this.SendPropertyChanged("feature");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_bookings(booking entity)
		{
			this.SendPropertyChanging();
			entity.room = this;
		}
		
		private void detach_bookings(booking entity)
		{
			this.SendPropertyChanging();
			entity.room = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.payment")]
	public partial class payment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _label;
		
		private EntitySet<booking> _bookings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnlabelChanging(string value);
    partial void OnlabelChanged();
    #endregion
		
		public payment()
		{
			this._bookings = new EntitySet<booking>(new Action<booking>(this.attach_bookings), new Action<booking>(this.detach_bookings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_label", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string label
		{
			get
			{
				return this._label;
			}
			set
			{
				if ((this._label != value))
				{
					this.OnlabelChanging(value);
					this.SendPropertyChanging();
					this._label = value;
					this.SendPropertyChanged("label");
					this.OnlabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="payment_booking", Storage="_bookings", ThisKey="id", OtherKey="id_payment")]
		public EntitySet<booking> bookings
		{
			get
			{
				return this._bookings;
			}
			set
			{
				this._bookings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_bookings(booking entity)
		{
			this.SendPropertyChanging();
			entity.payment = this;
		}
		
		private void detach_bookings(booking entity)
		{
			this.SendPropertyChanging();
			entity.payment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.booking")]
	public partial class booking : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<System.DateTime> _dateBooked;
		
		private System.Nullable<System.DateTime> _checkIn;
		
		private System.Nullable<System.DateTime> _checkOut;
		
		private System.Nullable<bool> _paid;
		
		private System.Nullable<decimal> _price;
		
		private System.Nullable<int> _nbBreakfast;
		
		private System.Nullable<int> _nbDinner;
		
		private int _id_customer;
		
		private int _id_staff;
		
		private int _id_room;
		
		private int _id_payment;
		
		private EntitySet<bookingOption> _bookingOptions;
		
		private EntitySet<invoice> _invoices;
		
		private EntityRef<customer> _customer;
		
		private EntityRef<payment> _payment;
		
		private EntityRef<room> _room;
		
		private EntityRef<staff> _staff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OndateBookedChanging(System.Nullable<System.DateTime> value);
    partial void OndateBookedChanged();
    partial void OncheckInChanging(System.Nullable<System.DateTime> value);
    partial void OncheckInChanged();
    partial void OncheckOutChanging(System.Nullable<System.DateTime> value);
    partial void OncheckOutChanged();
    partial void OnpaidChanging(System.Nullable<bool> value);
    partial void OnpaidChanged();
    partial void OnpriceChanging(System.Nullable<decimal> value);
    partial void OnpriceChanged();
    partial void OnnbBreakfastChanging(System.Nullable<int> value);
    partial void OnnbBreakfastChanged();
    partial void OnnbDinnerChanging(System.Nullable<int> value);
    partial void OnnbDinnerChanged();
    partial void Onid_customerChanging(int value);
    partial void Onid_customerChanged();
    partial void Onid_staffChanging(int value);
    partial void Onid_staffChanged();
    partial void Onid_roomChanging(int value);
    partial void Onid_roomChanged();
    partial void Onid_paymentChanging(int value);
    partial void Onid_paymentChanged();
    #endregion
		
		public booking()
		{
			this._bookingOptions = new EntitySet<bookingOption>(new Action<bookingOption>(this.attach_bookingOptions), new Action<bookingOption>(this.detach_bookingOptions));
			this._invoices = new EntitySet<invoice>(new Action<invoice>(this.attach_invoices), new Action<invoice>(this.detach_invoices));
			this._customer = default(EntityRef<customer>);
			this._payment = default(EntityRef<payment>);
			this._room = default(EntityRef<room>);
			this._staff = default(EntityRef<staff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateBooked", DbType="DateTime")]
		public System.Nullable<System.DateTime> dateBooked
		{
			get
			{
				return this._dateBooked;
			}
			set
			{
				if ((this._dateBooked != value))
				{
					this.OndateBookedChanging(value);
					this.SendPropertyChanging();
					this._dateBooked = value;
					this.SendPropertyChanged("dateBooked");
					this.OndateBookedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_checkIn", DbType="DateTime")]
		public System.Nullable<System.DateTime> checkIn
		{
			get
			{
				return this._checkIn;
			}
			set
			{
				if ((this._checkIn != value))
				{
					this.OncheckInChanging(value);
					this.SendPropertyChanging();
					this._checkIn = value;
					this.SendPropertyChanged("checkIn");
					this.OncheckInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_checkOut", DbType="DateTime")]
		public System.Nullable<System.DateTime> checkOut
		{
			get
			{
				return this._checkOut;
			}
			set
			{
				if ((this._checkOut != value))
				{
					this.OncheckOutChanging(value);
					this.SendPropertyChanging();
					this._checkOut = value;
					this.SendPropertyChanged("checkOut");
					this.OncheckOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paid", DbType="Bit")]
		public System.Nullable<bool> paid
		{
			get
			{
				return this._paid;
			}
			set
			{
				if ((this._paid != value))
				{
					this.OnpaidChanging(value);
					this.SendPropertyChanging();
					this._paid = value;
					this.SendPropertyChanged("paid");
					this.OnpaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nbBreakfast", DbType="Int")]
		public System.Nullable<int> nbBreakfast
		{
			get
			{
				return this._nbBreakfast;
			}
			set
			{
				if ((this._nbBreakfast != value))
				{
					this.OnnbBreakfastChanging(value);
					this.SendPropertyChanging();
					this._nbBreakfast = value;
					this.SendPropertyChanged("nbBreakfast");
					this.OnnbBreakfastChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nbDinner", DbType="Int")]
		public System.Nullable<int> nbDinner
		{
			get
			{
				return this._nbDinner;
			}
			set
			{
				if ((this._nbDinner != value))
				{
					this.OnnbDinnerChanging(value);
					this.SendPropertyChanging();
					this._nbDinner = value;
					this.SendPropertyChanged("nbDinner");
					this.OnnbDinnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_customer", DbType="Int NOT NULL")]
		public int id_customer
		{
			get
			{
				return this._id_customer;
			}
			set
			{
				if ((this._id_customer != value))
				{
					if (this._customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_customerChanging(value);
					this.SendPropertyChanging();
					this._id_customer = value;
					this.SendPropertyChanged("id_customer");
					this.Onid_customerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_staff", DbType="Int NOT NULL")]
		public int id_staff
		{
			get
			{
				return this._id_staff;
			}
			set
			{
				if ((this._id_staff != value))
				{
					if (this._staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_staffChanging(value);
					this.SendPropertyChanging();
					this._id_staff = value;
					this.SendPropertyChanged("id_staff");
					this.Onid_staffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_room", DbType="Int NOT NULL")]
		public int id_room
		{
			get
			{
				return this._id_room;
			}
			set
			{
				if ((this._id_room != value))
				{
					if (this._room.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_roomChanging(value);
					this.SendPropertyChanging();
					this._id_room = value;
					this.SendPropertyChanged("id_room");
					this.Onid_roomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_payment", DbType="Int NOT NULL")]
		public int id_payment
		{
			get
			{
				return this._id_payment;
			}
			set
			{
				if ((this._id_payment != value))
				{
					if (this._payment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_paymentChanging(value);
					this.SendPropertyChanging();
					this._id_payment = value;
					this.SendPropertyChanged("id_payment");
					this.Onid_paymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="booking_bookingOption", Storage="_bookingOptions", ThisKey="id", OtherKey="id_booking")]
		public EntitySet<bookingOption> bookingOptions
		{
			get
			{
				return this._bookingOptions;
			}
			set
			{
				this._bookingOptions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="booking_invoice", Storage="_invoices", ThisKey="id", OtherKey="id_booking")]
		public EntitySet<invoice> invoices
		{
			get
			{
				return this._invoices;
			}
			set
			{
				this._invoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_booking", Storage="_customer", ThisKey="id_customer", OtherKey="id", IsForeignKey=true)]
		public customer customer
		{
			get
			{
				return this._customer.Entity;
			}
			set
			{
				customer previousValue = this._customer.Entity;
				if (((previousValue != value) 
							|| (this._customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._customer.Entity = null;
						previousValue.bookings.Remove(this);
					}
					this._customer.Entity = value;
					if ((value != null))
					{
						value.bookings.Add(this);
						this._id_customer = value.id;
					}
					else
					{
						this._id_customer = default(int);
					}
					this.SendPropertyChanged("customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="payment_booking", Storage="_payment", ThisKey="id_payment", OtherKey="id", IsForeignKey=true)]
		public payment payment
		{
			get
			{
				return this._payment.Entity;
			}
			set
			{
				payment previousValue = this._payment.Entity;
				if (((previousValue != value) 
							|| (this._payment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._payment.Entity = null;
						previousValue.bookings.Remove(this);
					}
					this._payment.Entity = value;
					if ((value != null))
					{
						value.bookings.Add(this);
						this._id_payment = value.id;
					}
					else
					{
						this._id_payment = default(int);
					}
					this.SendPropertyChanged("payment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="room_booking", Storage="_room", ThisKey="id_room", OtherKey="id", IsForeignKey=true)]
		public room room
		{
			get
			{
				return this._room.Entity;
			}
			set
			{
				room previousValue = this._room.Entity;
				if (((previousValue != value) 
							|| (this._room.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._room.Entity = null;
						previousValue.bookings.Remove(this);
					}
					this._room.Entity = value;
					if ((value != null))
					{
						value.bookings.Add(this);
						this._id_room = value.id;
					}
					else
					{
						this._id_room = default(int);
					}
					this.SendPropertyChanged("room");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="staff_booking", Storage="_staff", ThisKey="id_staff", OtherKey="id", IsForeignKey=true)]
		public staff staff
		{
			get
			{
				return this._staff.Entity;
			}
			set
			{
				staff previousValue = this._staff.Entity;
				if (((previousValue != value) 
							|| (this._staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._staff.Entity = null;
						previousValue.bookings.Remove(this);
					}
					this._staff.Entity = value;
					if ((value != null))
					{
						value.bookings.Add(this);
						this._id_staff = value.id;
					}
					else
					{
						this._id_staff = default(int);
					}
					this.SendPropertyChanged("staff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_bookingOptions(bookingOption entity)
		{
			this.SendPropertyChanging();
			entity.booking = this;
		}
		
		private void detach_bookingOptions(bookingOption entity)
		{
			this.SendPropertyChanging();
			entity.booking = null;
		}
		
		private void attach_invoices(invoice entity)
		{
			this.SendPropertyChanging();
			entity.booking = this;
		}
		
		private void detach_invoices(invoice entity)
		{
			this.SendPropertyChanging();
			entity.booking = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.features")]
	public partial class feature : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _options;
		
		private System.Nullable<int> _capacity;
		
		private System.Nullable<int> _floor;
		
		private string _bedType;
		
		private System.Nullable<bool> _babyBed;
		
		private System.Nullable<decimal> _price1n;
		
		private System.Nullable<decimal> _price5n;
		
		private System.Nullable<decimal> _price10n;
		
		private EntitySet<room> _rooms;
		
		private EntitySet<promotion> _promotions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnoptionsChanging(string value);
    partial void OnoptionsChanged();
    partial void OncapacityChanging(System.Nullable<int> value);
    partial void OncapacityChanged();
    partial void OnfloorChanging(System.Nullable<int> value);
    partial void OnfloorChanged();
    partial void OnbedTypeChanging(string value);
    partial void OnbedTypeChanged();
    partial void OnbabyBedChanging(System.Nullable<bool> value);
    partial void OnbabyBedChanged();
    partial void Onprice1nChanging(System.Nullable<decimal> value);
    partial void Onprice1nChanged();
    partial void Onprice5nChanging(System.Nullable<decimal> value);
    partial void Onprice5nChanged();
    partial void Onprice10nChanging(System.Nullable<decimal> value);
    partial void Onprice10nChanged();
    #endregion
		
		public feature()
		{
			this._rooms = new EntitySet<room>(new Action<room>(this.attach_rooms), new Action<room>(this.detach_rooms));
			this._promotions = new EntitySet<promotion>(new Action<promotion>(this.attach_promotions), new Action<promotion>(this.detach_promotions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_options", DbType="VarChar(25)")]
		public string options
		{
			get
			{
				return this._options;
			}
			set
			{
				if ((this._options != value))
				{
					this.OnoptionsChanging(value);
					this.SendPropertyChanging();
					this._options = value;
					this.SendPropertyChanged("options");
					this.OnoptionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_capacity", DbType="Int")]
		public System.Nullable<int> capacity
		{
			get
			{
				return this._capacity;
			}
			set
			{
				if ((this._capacity != value))
				{
					this.OncapacityChanging(value);
					this.SendPropertyChanging();
					this._capacity = value;
					this.SendPropertyChanged("capacity");
					this.OncapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_floor", DbType="Int")]
		public System.Nullable<int> floor
		{
			get
			{
				return this._floor;
			}
			set
			{
				if ((this._floor != value))
				{
					this.OnfloorChanging(value);
					this.SendPropertyChanging();
					this._floor = value;
					this.SendPropertyChanged("floor");
					this.OnfloorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bedType", DbType="VarChar(25)")]
		public string bedType
		{
			get
			{
				return this._bedType;
			}
			set
			{
				if ((this._bedType != value))
				{
					this.OnbedTypeChanging(value);
					this.SendPropertyChanging();
					this._bedType = value;
					this.SendPropertyChanged("bedType");
					this.OnbedTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_babyBed", DbType="Bit")]
		public System.Nullable<bool> babyBed
		{
			get
			{
				return this._babyBed;
			}
			set
			{
				if ((this._babyBed != value))
				{
					this.OnbabyBedChanging(value);
					this.SendPropertyChanging();
					this._babyBed = value;
					this.SendPropertyChanged("babyBed");
					this.OnbabyBedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price1n", DbType="Decimal(25,2)")]
		public System.Nullable<decimal> price1n
		{
			get
			{
				return this._price1n;
			}
			set
			{
				if ((this._price1n != value))
				{
					this.Onprice1nChanging(value);
					this.SendPropertyChanging();
					this._price1n = value;
					this.SendPropertyChanged("price1n");
					this.Onprice1nChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price5n", DbType="Decimal(25,2)")]
		public System.Nullable<decimal> price5n
		{
			get
			{
				return this._price5n;
			}
			set
			{
				if ((this._price5n != value))
				{
					this.Onprice5nChanging(value);
					this.SendPropertyChanging();
					this._price5n = value;
					this.SendPropertyChanged("price5n");
					this.Onprice5nChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price10n", DbType="Decimal(25,2)")]
		public System.Nullable<decimal> price10n
		{
			get
			{
				return this._price10n;
			}
			set
			{
				if ((this._price10n != value))
				{
					this.Onprice10nChanging(value);
					this.SendPropertyChanging();
					this._price10n = value;
					this.SendPropertyChanged("price10n");
					this.Onprice10nChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="feature_room", Storage="_rooms", ThisKey="id", OtherKey="id_features")]
		public EntitySet<room> rooms
		{
			get
			{
				return this._rooms;
			}
			set
			{
				this._rooms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="feature_promotion", Storage="_promotions", ThisKey="id", OtherKey="id_features")]
		public EntitySet<promotion> promotions
		{
			get
			{
				return this._promotions;
			}
			set
			{
				this._promotions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_rooms(room entity)
		{
			this.SendPropertyChanging();
			entity.feature = this;
		}
		
		private void detach_rooms(room entity)
		{
			this.SendPropertyChanging();
			entity.feature = null;
		}
		
		private void attach_promotions(promotion entity)
		{
			this.SendPropertyChanging();
			entity.feature = this;
		}
		
		private void detach_promotions(promotion entity)
		{
			this.SendPropertyChanging();
			entity.feature = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.promotion")]
	public partial class promotion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _code;
		
		private System.Nullable<int> _discount;
		
		private System.Nullable<System.DateTime> _startDate;
		
		private System.Nullable<System.DateTime> _endDate;
		
		private System.Nullable<int> _id_features;
		
		private EntityRef<feature> _feature;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OndiscountChanging(System.Nullable<int> value);
    partial void OndiscountChanged();
    partial void OnstartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnstartDateChanged();
    partial void OnendDateChanging(System.Nullable<System.DateTime> value);
    partial void OnendDateChanged();
    partial void Onid_featuresChanging(System.Nullable<int> value);
    partial void Onid_featuresChanged();
    #endregion
		
		public promotion()
		{
			this._feature = default(EntityRef<feature>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(25)")]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_discount", DbType="Int")]
		public System.Nullable<int> discount
		{
			get
			{
				return this._discount;
			}
			set
			{
				if ((this._discount != value))
				{
					this.OndiscountChanging(value);
					this.SendPropertyChanging();
					this._discount = value;
					this.SendPropertyChanged("discount");
					this.OndiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_startDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> startDate
		{
			get
			{
				return this._startDate;
			}
			set
			{
				if ((this._startDate != value))
				{
					this.OnstartDateChanging(value);
					this.SendPropertyChanging();
					this._startDate = value;
					this.SendPropertyChanged("startDate");
					this.OnstartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> endDate
		{
			get
			{
				return this._endDate;
			}
			set
			{
				if ((this._endDate != value))
				{
					this.OnendDateChanging(value);
					this.SendPropertyChanging();
					this._endDate = value;
					this.SendPropertyChanged("endDate");
					this.OnendDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_features", DbType="Int")]
		public System.Nullable<int> id_features
		{
			get
			{
				return this._id_features;
			}
			set
			{
				if ((this._id_features != value))
				{
					if (this._feature.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_featuresChanging(value);
					this.SendPropertyChanging();
					this._id_features = value;
					this.SendPropertyChanged("id_features");
					this.Onid_featuresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="feature_promotion", Storage="_feature", ThisKey="id_features", OtherKey="id", IsForeignKey=true)]
		public feature feature
		{
			get
			{
				return this._feature.Entity;
			}
			set
			{
				feature previousValue = this._feature.Entity;
				if (((previousValue != value) 
							|| (this._feature.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._feature.Entity = null;
						previousValue.promotions.Remove(this);
					}
					this._feature.Entity = value;
					if ((value != null))
					{
						value.promotions.Add(this);
						this._id_features = value.id;
					}
					else
					{
						this._id_features = default(Nullable<int>);
					}
					this.SendPropertyChanged("feature");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[log]")]
	public partial class log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<System.DateTime> _datetime;
		
		private string _username;
		
		private string _errorDetails;
		
		private string _errorMessage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OndatetimeChanging(System.Nullable<System.DateTime> value);
    partial void OndatetimeChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnerrorDetailsChanging(string value);
    partial void OnerrorDetailsChanged();
    partial void OnerrorMessageChanging(string value);
    partial void OnerrorMessageChanged();
    #endregion
		
		public log()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datetime", DbType="DateTime")]
		public System.Nullable<System.DateTime> datetime
		{
			get
			{
				return this._datetime;
			}
			set
			{
				if ((this._datetime != value))
				{
					this.OndatetimeChanging(value);
					this.SendPropertyChanging();
					this._datetime = value;
					this.SendPropertyChanged("datetime");
					this.OndatetimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_errorDetails", DbType="VarChar(MAX)")]
		public string errorDetails
		{
			get
			{
				return this._errorDetails;
			}
			set
			{
				if ((this._errorDetails != value))
				{
					this.OnerrorDetailsChanging(value);
					this.SendPropertyChanging();
					this._errorDetails = value;
					this.SendPropertyChanged("errorDetails");
					this.OnerrorDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_errorMessage", DbType="VarChar(MAX)")]
		public string errorMessage
		{
			get
			{
				return this._errorMessage;
			}
			set
			{
				if ((this._errorMessage != value))
				{
					this.OnerrorMessageChanging(value);
					this.SendPropertyChanging();
					this._errorMessage = value;
					this.SendPropertyChanged("errorMessage");
					this.OnerrorMessageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
